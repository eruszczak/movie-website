version: '3'

services:
  movie-nginx:
    container_name: movie-nginx-container
    build: ./nginx
    env_file: .env.prod
    restart: always
    environment:
      - VIRTUAL_HOST=margo.eryk.io
      - LETSENCRYPT_HOST=margo.eryk.io
    volumes:
      - media:/movie-media
      - static:/movie-static
    expose:
      - 80
    depends_on:
      - movie-backend

  movie-backend:
    container_name: movie-backend-container
    image: reryk/movie-backend
    build: ./src
    restart: always
    command: bash -c "python manage.py collectstatic --noinput && gunicorn mysite.wsgi -b 0.0.0.0:9000 --workers 2"
    env_file: .env.prod
    volumes:
      - ./src:/code
      - media:/movie-media
      - static:/movie-static
    expose:
      - 9000
    depends_on:
      - movie-database
      - redis

  movie-database:
    container_name: movie-database-container
    image: postgres:9.4
    restart: always
    env_file: .env.prod
    volumes:
      - /opt/postgres/movie:/var/lib/postgresql/data
    expose:
      - 5432

  redis:
    container_name: movie-redis-container
    image: "redis:alpine"

  celery:
    container_name: movie-celery-container
    image: reryk/movie-backend
    command: celery -A mysite worker -l info
    env_file: .env.prod
    volumes:
      - media:/movie-media
    depends_on:
      - movie-backend
      - redis

  celery-beat:
    container_name: movie-celery-beat-container
    image: reryk/movie-backend
    command: celery -A mysite beat -l info
    depends_on:
      - movie-backend
      - redis

volumes:
  media:
  static:

networks:
  default:
    external:
      name: nginx-proxy